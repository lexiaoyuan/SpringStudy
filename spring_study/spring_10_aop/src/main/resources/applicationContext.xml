<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--注册bean-->
    <bean id="userService" class="com.spring.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.spring.log.BeforeLog"/>
    <bean id="afterLog" class="com.spring.log.AfterLog"/>

    <!--第一种方式：使用Spring接口-->
    <!--配置AOP:需要导入aop的约束-->
    <!--<aop:config>
        &lt;!&ndash; 切入点：expression:表达式(好定位到切入点的位置)，execution(要执行的位置)&ndash;&gt;
        <aop:pointcut id="userServicePointCut" expression="execution(* com.spring.service.UserServiceImpl.*(..))"/>

        &lt;!&ndash; 执行环绕增加！&ndash;&gt;
        &lt;!&ndash; 将beforeLog类切入到userServicePointCut的位置&ndash;&gt;
        <aop:advisor advice-ref="beforeLog" pointcut-ref="userServicePointCut"/>
        &lt;!&ndash; 将afterLog类切入到pointCut1的位置&ndash;&gt;
        <aop:advisor advice-ref="afterLog" pointcut-ref="userServicePointCut"/>
    </aop:config>-->


    <!-- 第二种方式:自定义类-->
    <!--<bean id="diyPointCut" class="com.spring.diy.DiyPointCut"/>
    <aop:config>
        &lt;!&ndash; 自定义切面&ndash;&gt;
        <aop:aspect ref="diyPointCut">
            &lt;!&ndash; 定义切点：com.spring.service.UserServiceImpl.*(..) ，UserServiceImpl类下的所有方法&ndash;&gt;
            <aop:pointcut id="pointCut" expression="execution(* com.spring.service.UserServiceImpl.*(..))"/>
            &lt;!&ndash; 切点pointCut执行前执行diyPointCut中的diyBefore方法&ndash;&gt;
            <aop:before method="diyBefore" pointcut-ref="pointCut"/>
            &lt;!&ndash; 切点pointCut执行后执行diyPointCut中的diyAfter方法&ndash;&gt;
            <aop:after method="diyAfter" pointcut-ref="pointCut"/>
        </aop:aspect>
    </aop:config>-->


    <!--    第三种方式：使用注解-->
    <bean id="annotationPointCut" class="com.spring.diy.AnnotationPointCut"/>
    <!--    不再需要<aop:config>配置，使用了注解-->
    <!--  开启aop切面的注解支持  -->
    <aop:aspectj-autoproxy/>
</beans>